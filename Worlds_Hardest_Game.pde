/* Name : Jay Jung
   Date of last edit : November 24th (My birthday lol)
   Title : The World's Hardest Game (Could probably make it harder though)
   Description : A game where you dodge Circles and collect coins
   Controls : The arrow keys and nothing else
*/

int i, j, k, n=0;
int deaths;

byte state = 0, stage=1;

short[] xDirOne = new short[5];
short[] yDirOne = new short[5];

short[] yDirTwo = new short[5];

short[] xDirThree = new short[6];

short[] xDirFour = new short[5];
short[] yDirFour = new short[5];


float spd = 5;
float rad;

float circleSpdOne = 2.3;
float circleSpdTwo = 3.65;
float circleSpdThree = 3.6;
float circleSpdFour = 2;

float rectSizeOne = 50;
float rectSizeTwo = 35;
float rectSizeThree = 20;
float rectSizeFour = 20;

boolean[] dir = new boolean[4];

short[][] gridZero = {
  {3, 1, 1, 1, 1}, 
  {1, 1, 1, 1, 1}, 
  {1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1}, 
  {1, 1, 1, 1, 4}
};

short[][] gridOne = {
  {3, 1, 1, 1, 1}, 
  {1, 1, 2, 1, 1}, 
  {1, 2, 2, 2, 1},
  {1, 1, 2, 1, 1}, 
  {1, 1, 1, 1, 4}
};

short[][] gridTwo = {
  {3, 2, 1, 1, 1, 2, 1, 1, 1, 2}, 
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 3}, 
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 2}, 
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 3},  
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 2}, 
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 3},  
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 2}, 
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 3}, 
  {1, 2, 1, 2, 1, 2, 1, 2, 1, 2}, 
  {1, 1, 1, 2, 1, 1, 1, 2, 1, 4}, 
};

short[][] gridThree = {
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, 
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, 
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, 
  {5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5}, 
  {5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5}, 
  {5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5}, 
  {5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5}, 
  {5, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 5}, 
  {5, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 2, 5}, 
  {5, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 2, 5}, 
  {5, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 2, 5}, 
  {5, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 2, 5}, 
  {5, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 5}, 
  {5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5}, 
  {5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5}, 
  {5, 5, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 5, 5}, 
  {5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5}, 
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, 
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, 
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},   
};

short[][] gridFour = {
  {5, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, 
  {5, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5}, 
  {5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 5}, 
  {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 5}, 
};

PVector player;
PVector[] circles = new PVector[50];
PVector[] coins = new PVector[50];

void setup() {
  size(450, 450);
  rectMode(CENTER);
  player = new PVector(125, 125, 15);
//////////////////////////////////////////////////////////////////////////////////stage 1 circles//////////////////////////////////////////////////////////////////////////////////
  circles[0] = new PVector(125, 325, 25);  
  circles[1] = new PVector(125, 175, 25);   
  circles[2] = new PVector(175, 125, 25);  
  circles[3] = new PVector(325, 125, 25);   
//////////////////////////////////////////////////////////////////////////////////stage 2 circles//////////////////////////////////////////////////////////////////////////////////  
  circles[4] = new PVector(102, 370, 25);  
  circles[5] = new PVector(172, 370, 25);   
  circles[6] = new PVector(243, 370, 25);  
  circles[7] = new PVector(312, 370, 25); 
  circles[8] = new PVector(382, 370, 25);     
//////////////////////////////////////////////////////////////////////////////////stage 3 circles//////////////////////////////////////////////////////////////////////////////////    
  circles[9] = new PVector(114, 150, 20);  
  circles[10] = new PVector(338, 190, 20);   
  circles[11] = new PVector(114, 230, 20);  
  circles[12] = new PVector(338, 270, 20); 
  circles[13] = new PVector(114, 310, 20);  
  circles[14] = new PVector(338, 350, 20);  
//////////////////////////////////////////////////////////////////////////////////stage 3 coins//////////////////////////////////////////////////////////////////////////////////  
  coins[0] = new PVector(120, 150, 15);  
  coins[1] = new PVector(330, 150, 15);  
  coins[2] = new PVector(120, 360, 15);  
  coins[3] = new PVector(330, 360, 15);   
//////////////////////////////////////////////////////////////////////////////////stage 4 circles//////////////////////////////////////////////////////////////////////////////////    
  circles[15] = new PVector(180, 250, 20);
  circles[16] = new PVector(250, 150, 20);
  circles[17] = new PVector(300, 200, 20);
  circles[18] = new PVector(160, 120, 20);
//////////////////////////////////////////////////////////////////////////////////stage 4 coins//////////////////////////////////////////////////////////////////////////////////    
  coins[4] = new PVector(140, 180, 15);  
  coins[5] = new PVector(140, 330, 15);  
  coins[6] = new PVector(310, 180, 15);  
  coins[7] = new PVector(310, 330, 15); 
  
  for(i=0; i<5; i++){
    xDirOne[i] = 1;
    yDirOne[i] = 1;
    
    yDirTwo[i] = 1;      
    
    xDirFour[i] = 1;
    yDirFour[i] = 1;
  }  
  
  for(i=0; i<6; i++){
    xDirThree[i] = 1;
  }
  xDirFour[2] = -1;
  xDirFour[4] = -1;
  
  yDirFour[2] = -1;
  yDirFour[4] = -1;
  
  rad = player.z/2;
}


void draw() {
  if(state == 0){
    menu();
  }
  
  else if(state == 1){
    if(stage == 1){
      stageOne();     
    }
    if(stage == 2){
      stageTwo();     
    }
    if(stage == 3){
      stageThree();     
    }
    if(stage == 4){
      stageFour();     
    }    
  }
  
  else if(state == 3){
    control();
  }
  
  else if(state == 4){
    end();
  }
}

void deathBar(){
  fill(0);
  rect(225, 20, 450, 50);
  fill(255);
  textSize(24);
  text("Deaths : " + deaths, 25, 32);
  if(state == 4){
    text("The End", 330, 32);
  }  
  else if(state != 4){
    text("Stage : " + stage, 320, 32);
  }
}












  